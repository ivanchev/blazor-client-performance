
<table class="table">
    <thead>
        <tr>
            @foreach (var item in Columns)
            {
                <th>@item</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Data)
        {
            var Item = item;
            var rowStyle = Item.Equals(SelectedItem) ? "background-color: lightblue;" : "";

            <tr style="@rowStyle">
                @foreach (var column in Columns)
                {
                    <td @onclick="@(() => { SelectedItem = Item; RefreshComponent(); })">
                        @switch (column)
                        {
                            case "Date":
                                @Item.Date.ToShortDateString()
                                break;
                            case "TemperatureC":
                                @Item.TemperatureC
                                break;
                            case "TemperatureF":
                                @Item.TemperatureF
                                break;
                            case "Summary":
                                @Item.Summary
                                break;
                        }
                    </td>
                }
            </tr>

        }
    </tbody>
</table>


@code {
    [Parameter]
    public WeatherForecast[] Data { get; set; }

    [Parameter]
    public List<string> Columns { get; set; }

    public WeatherForecast SelectedItem { get; set; }

    DateTime t1;
    DateTime t2;
    Task RefreshComponent()
    {
        t1 = DateTime.Now;
        StateHasChanged();
        return Task.CompletedTask;
    }
    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            t2 = DateTime.Now;
            Console.WriteLine("Refresh Time " + (t2 - t1).TotalMilliseconds);
        }
        return base.OnAfterRenderAsync(firstRender);
    }
}
